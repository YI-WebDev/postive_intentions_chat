{"version":3,"file":"src_components_pages_hands_handpose-estimation_index_js.main.js","mappings":"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","sources":["webpack://chat/./src/components/pages/hands/handpose-estimation/camera.js","webpack://chat/./src/components/pages/hands/handpose-estimation/index.js","webpack://chat/./src/components/pages/hands/handpose-estimation/option_panel.js","webpack://chat/./src/components/pages/hands/handpose-estimation/shared/params.js","webpack://chat/./src/components/pages/hands/handpose-estimation/shared/stats_panel.js","webpack://chat/./src/components/pages/hands/handpose-estimation/shared/util.js","webpack://chat/ignored|/workspaces/chat/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|fs","webpack://chat/ignored|/workspaces/chat/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|os","webpack://chat/ignored|/workspaces/chat/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|path","webpack://chat/ignored|/workspaces/chat/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|perf_hooks","webpack://chat/ignored|/workspaces/chat/node_modules/@tensorflow/tfjs-backend-wasm/wasm-out|worker_threads","webpack://chat/ignored|/workspaces/chat/node_modules/@tensorflow/tfjs-core/dist/platforms|node-fetch","webpack://chat/ignored|/workspaces/chat/node_modules/@tensorflow/tfjs-core/dist/platforms|util","webpack://chat/ignored|/workspaces/chat/node_modules/seedrandom|crypto"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as scatter from 'scatter-gl';\n\nimport * as params from './shared/params';\nimport {isMobile} from './shared/util';\n\n// These anchor points allow the hand pointcloud to resize according to its\n// position in the input.\nconst ANCHOR_POINTS = [[0, 0, 0], [0, 0.1, 0], [-0.1, 0, 0], [-0.1, -0.1, 0]];\n\nconst fingerLookupIndices = {\n  thumb: [0, 1, 2, 3, 4],\n  indexFinger: [0, 5, 6, 7, 8],\n  middleFinger: [0, 9, 10, 11, 12],\n  ringFinger: [0, 13, 14, 15, 16],\n  pinky: [0, 17, 18, 19, 20],\n}; // for rendering each finger as a polyline\n\nconst connections = [\n  [0, 1], [1, 2], [2, 3], [3,4],\n  [0, 5], [5, 6], [6, 7], [7, 8],\n  [0, 9], [9, 10], [10, 11], [11, 12],\n  [0, 13], [13,14], [14, 15], [15, 16],\n  [0, 17], [17, 18],[18, 19], [19,20]\n];\n\nfunction createScatterGLContext(selectors) {\n  const scatterGLEl = document.querySelector(selectors);\n  return {\n    scatterGLEl,\n    scatterGL: new scatter.ScatterGL(scatterGLEl, {\n      'rotateOnStart': true,\n      'selectEnabled': false,\n      'styles': {polyline: {defaultOpacity: 1, deselectedOpacity: 1}}\n    }),\n    scatterGLHasInitialized: false,\n  };\n}\n\nconst scatterGLCtxtLeftHand = createScatterGLContext('#scatter-gl-container-left');\nconst scatterGLCtxtRightHand = createScatterGLContext('#scatter-gl-container-right');\n\nexport class Camera {\n  constructor() {\n    this.video = document.getElementById('video');\n    this.canvas = document.getElementById('output');\n    this.ctx = this.canvas.getContext('2d');\n  }\n\n  /**\n   * Initiate a Camera instance and wait for the camera stream to be ready.\n   * @param cameraParam From app `STATE.camera`.\n   */\n  static async setupCamera(cameraParam) {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      throw new Error(\n          'Browser API navigator.mediaDevices.getUserMedia not available');\n    }\n\n    const {targetFPS, sizeOption} = cameraParam;\n    const $size = params.VIDEO_SIZE[sizeOption];\n    const videoConfig = {\n      'audio': false,\n      'video': {\n        // back camera\n        facingMode: 'environment',\n        // Only setting the video to a specified size for large screen, on\n        // mobile devices accept the default size.\n        // width: isMobile() ? params.VIDEO_SIZE['360 X 270'].width : $size.width,\n        // height: isMobile() ? params.VIDEO_SIZE['360 X 270'].height :\n                            //  $size.height,\n        frameRate: {\n          ideal: targetFPS,\n        }\n      }\n    };\n\n    const stream = await navigator.mediaDevices.getUserMedia(videoConfig);\n\n    const camera = new Camera();\n    camera.video.srcObject = stream;\n\n    await new Promise((resolve) => {\n      camera.video.onloadedmetadata = () => {\n        // Ensure the canvas matches the video's intrinsic size\n        camera.canvas.width = camera.video.videoWidth;\n        camera.canvas.height = camera.video.videoHeight;\n\n        // Update the container's style if necessary, can be handled with CSS\n        const canvasContainer = document.querySelector('.canvas-wrapper');\n        canvasContainer.style.width = '100%'; // Make the container responsive\n        canvasContainer.style.height = 'auto'; // Adjust height based on the content\n        resolve(video);\n      };\n    });\n\n    camera.video.play();\n\n    const videoWidth = camera.video.videoWidth;\n    const videoHeight = camera.video.videoHeight;\n    // Must set below two lines, otherwise video element doesn't show.\n    // camera.video.width = videoWidth;\n    // camera.video.height = videoHeight;\n\n    // camera.canvas.width = videoWidth;\n    // camera.canvas.height = videoHeight;\n    // const canvasContainer = document.querySelector('.canvas-wrapper');\n    // canvasContainer.style = `width: ${videoWidth}px; height: ${videoHeight}px`;\n\n    // Because the image from camera is mirrored, need to flip horizontally.\n    if(videoConfig.video.facingMode === 'user') {\n      camera.ctx.translate(camera.video.videoWidth, 0);\n      camera.ctx.scale(-1, 1);\n    }\n\n    for (const ctxt of [scatterGLCtxtLeftHand, scatterGLCtxtRightHand]) {\n      ctxt.scatterGLEl.style =\n          `width: ${videoWidth / 2}px; height: ${videoHeight / 2}px;`;\n      ctxt.scatterGL.resize();\n\n      ctxt.scatterGLEl.style.display =\n          params.STATE.modelConfig.render3D ? 'inline-block' : 'none';\n    }\n\n    return camera;\n  }\n\n  drawCtx() {\n    this.ctx.drawImage(\n        this.video, 0, 0, this.video.videoWidth, this.video.videoHeight);\n  }\n\n  clearCtx() {\n    this.ctx.clearRect(0, 0, this.video.videoWidth, this.video.videoHeight);\n  }\n\n  /**\n   * Draw the keypoints on the video.\n   * @param hands A list of hands to render.\n   */\n  drawResults(hands) {\n    // Sort by right to left hands.\n    hands.sort((hand1, hand2) => {\n      if (hand1.handedness < hand2.handedness) return 1;\n      if (hand1.handedness > hand2.handedness) return -1;\n      return 0;\n    });\n\n    // Pad hands to clear empty scatter GL plots.\n    while (hands.length < 2) hands.push({});\n\n    for (let i = 0; i < hands.length; ++i) {\n      // Third hand and onwards scatterGL context is set to null since we\n      // don't render them.\n      const ctxt = [scatterGLCtxtLeftHand, scatterGLCtxtRightHand][i];\n      this.drawResult(hands[i], ctxt);\n    }\n  }\n\n  /**\n   * Draw the keypoints on the video.\n   * @param hand A hand with keypoints to render.\n   * @param ctxt Scatter GL context to render 3D keypoints to.\n   */\n  drawResult(hand, ctxt) {\n    if (hand.keypoints != null) {\n      this.drawKeypoints(hand.keypoints, hand.handedness);\n    }\n    // Don't render 3D hands after first two.\n    if (ctxt == null) {\n      return;\n    }\n    if (hand.keypoints3D != null && params.STATE.modelConfig.render3D) {\n      this.drawKeypoints3D(hand.keypoints3D, hand.handedness, ctxt);\n    } else {\n      // Clear scatter plot.\n      this.drawKeypoints3D([], '', ctxt);\n    }\n  }\n\n  /**\n   * Draw the keypoints on the video.\n   * @param keypoints A list of keypoints.\n   * @param handedness Label of hand (either Left or Right).\n   */\n   drawKeypoints(keypoints, handedness) {\n    const keypointsArray = keypoints;\n    this.ctx.fillStyle = handedness === 'Left' ? 'Red' : 'Blue';\n    this.ctx.strokeStyle = 'White';\n    this.ctx.lineWidth = params.DEFAULT_LINE_WIDTH;\n\n    for (let i = 0; i < keypointsArray.length; i++) {\n      const y = keypointsArray[i].x;\n      const x = keypointsArray[i].y;\n      this.drawPoint(x - 2, y - 2, 3);\n    }\n\n    const fingers = Object.keys(fingerLookupIndices);\n    for (let i = 0; i < fingers.length; i++) {\n      const finger = fingers[i];\n      const points = fingerLookupIndices[finger].map(idx => keypoints[idx]);\n      this.drawPath(points, false);\n    }\n  }\n\n  drawPath(points, closePath) {\n    const region = new Path2D();\n    region.moveTo(points[0].x, points[0].y);\n    for (let i = 1; i < points.length; i++) {\n      const point = points[i];\n      region.lineTo(point.x, point.y);\n    }\n\n    if (closePath) {\n      region.closePath();\n    }\n    this.ctx.stroke(region);\n  }\n\n  drawPoint(y, x, r) {\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, r, 0, 2 * Math.PI);\n    this.ctx.fill();\n  }\n\n  drawKeypoints3D(keypoints, handedness, ctxt) {\n    const scoreThreshold = params.STATE.modelConfig.scoreThreshold || 0;\n    const pointsData =\n        keypoints.map(keypoint => ([-keypoint.x, -keypoint.y, -keypoint.z]));\n\n    const dataset =\n        new scatter.ScatterGL.Dataset([...pointsData, ...ANCHOR_POINTS]);\n\n    ctxt.scatterGL.setPointColorer((i) => {\n      if (keypoints[i] == null || keypoints[i].score < scoreThreshold) {\n        // hide anchor points and low-confident points.\n        return '#ffffff';\n      }\n      return handedness === 'Left' ? '#ff0000' : '#0000ff';\n    });\n\n    if (!ctxt.scatterGLHasInitialized) {\n      ctxt.scatterGL.render(dataset);\n    } else {\n      ctxt.scatterGL.updateDataset(dataset);\n    }\n    const sequences = connections.map(pair => ({indices: pair}));\n    ctxt.scatterGL.setSequences(sequences);\n    ctxt.scatterGLHasInitialized = true;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport '@tensorflow/tfjs-backend-webgl';\n// import * as mpHands from '@mediapipe/hands';\n\nimport * as tfjsWasm from '@tensorflow/tfjs-backend-wasm';\n\ntfjsWasm.setWasmPaths(`https://chat.positive-intentions.com/wasm`);\n\nimport * as handdetection from '@tensorflow-models/hand-pose-detection';\n\nimport {Camera} from './camera';\nimport {setupDatGui} from './option_panel';\nimport {STATE} from './shared/params';\nimport {setupStats} from './shared/stats_panel';\nimport {setBackendAndEnvFlags} from './shared/util';\n\nlet detector, camera, stats;\nlet startInferenceTime, numInferences = 0;\nlet inferenceTimeSum = 0, lastPanelUpdate = 0;\nlet rafId;\n\nasync function createDetector() {\n  switch (STATE.model) {\n    case handdetection.SupportedModels.MediaPipeHands:\n      const runtime = STATE.backend.split('-')[0];\n      if (runtime === 'mediapipe') {\n        return handdetection.createDetector(STATE.model, {\n          runtime,\n          modelType: STATE.modelConfig.type,\n          maxHands: STATE.modelConfig.maxNumHands,\n          solutionPath: `https://chat.positive-intentions.com/wasm`\n        });\n      } else if (runtime === 'tfjs') {\n        return handdetection.createDetector(STATE.model, {\n          runtime,\n          modelType: STATE.modelConfig.type,\n          maxHands: STATE.modelConfig.maxNumHands\n        });\n      }\n  }\n}\n\nasync function checkGuiUpdate() {\n  if (STATE.isTargetFPSChanged || STATE.isSizeOptionChanged) {\n    camera = await Camera.setupCamera(STATE.camera);\n    STATE.isTargetFPSChanged = false;\n    STATE.isSizeOptionChanged = false;\n  }\n\n  if (STATE.isModelChanged || STATE.isFlagChanged || STATE.isBackendChanged) {\n    STATE.isModelChanged = true;\n\n    window.cancelAnimationFrame(rafId);\n\n    if (detector != null) {\n      detector.dispose();\n    }\n\n    if (STATE.isFlagChanged || STATE.isBackendChanged) {\n      await setBackendAndEnvFlags(STATE.flags, STATE.backend);\n    }\n\n    try {\n      detector = await createDetector(STATE.model);\n    } catch (error) {\n      detector = null;\n      alert(error);\n    }\n\n    STATE.isFlagChanged = false;\n    STATE.isBackendChanged = false;\n    STATE.isModelChanged = false;\n  }\n}\n\nfunction beginEstimateHandsStats() {\n  startInferenceTime = (performance || Date).now();\n}\n\nfunction endEstimateHandsStats() {\n  const endInferenceTime = (performance || Date).now();\n  inferenceTimeSum += endInferenceTime - startInferenceTime;\n  ++numInferences;\n\n  const panelUpdateMilliseconds = 1000;\n  if (endInferenceTime - lastPanelUpdate >= panelUpdateMilliseconds) {\n    const averageInferenceTime = inferenceTimeSum / numInferences;\n    inferenceTimeSum = 0;\n    numInferences = 0;\n    // stats.customFpsPanel.update(\n    //     1000.0 / averageInferenceTime, 120 /* maxValue */);\n    lastPanelUpdate = endInferenceTime;\n  }\n}\n\nasync function renderResult() {\n  if (camera.video.readyState < 2) {\n    await new Promise((resolve) => {\n      camera.video.onloadeddata = () => {\n        resolve(video);\n      };\n    });\n  }\n\n  let hands = null;\n\n  // Detector can be null if initialization failed (for example when loading\n  // from a URL that does not exist).\n  if (detector != null) {\n    // FPS only counts the time it takes to finish estimateHands.\n    beginEstimateHandsStats();\n\n    // Detectors can throw errors, for example when using custom URLs that\n    // contain a model that doesn't provide the expected output.\n    try {\n      hands = await detector.estimateHands(\n          camera.video,\n          {flipHorizontal: false});\n    } catch (error) {\n      detector.dispose();\n      detector = null;\n      alert(error);\n    }\n\n    endEstimateHandsStats();\n  }\n\n  camera.drawCtx();\n\n  // The null check makes sure the UI is not in the middle of changing to a\n  // different model. If during model change, the result is from an old model,\n  // which shouldn't be rendered.\n  if (hands && hands.length > 0 && !STATE.isModelChanged) {\n    camera.drawResults(hands);\n  }\n}\n\nasync function renderPrediction() {\n  await checkGuiUpdate();\n\n  if (!STATE.isModelChanged) {\n    await renderResult();\n  }\n\n  rafId = requestAnimationFrame(renderPrediction);\n};\n\nasync function app() {\n  // Gui content will change depending on which model is in the query string.\n  const urlParams = new URLSearchParams(window.location.search);\n  if (!urlParams.has('model')) {\n    // set default model to \"mediapipe_hands\"\n    urlParams.set('model', 'mediapipe_hands');\n  }\n\n  await setupDatGui(urlParams);\n\n  // stats = setupStats();\n\n  camera = await Camera.setupCamera(STATE.camera);\n\n  await setBackendAndEnvFlags(STATE.flags, STATE.backend);\n\n  detector = await createDetector();\n\n  renderPrediction();\n};\n\napp();\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport dat from 'dat.gui';\nimport * as handdetection from '@tensorflow-models/hand-pose-detection';\nimport * as tf from '@tensorflow/tfjs-core';\n\nimport * as params from './shared/params';\n\n/**\n * Records each flag's default value under the runtime environment and is a\n * constant in runtime.\n */\nlet TUNABLE_FLAG_DEFAULT_VALUE_MAP;\n\nconst stringValueMap = {};\n\nexport async function setupDatGui(urlParams) {\n  const gui = new dat.GUI({width: 300});\n  gui.domElement.id = 'gui';\n  gui.domElement.style.display = 'none';\n\n  // The camera folder contains options for video settings.\n  const cameraFolder = gui.addFolder('Camera');\n  const fpsController = cameraFolder.add(params.STATE.camera, 'targetFPS');\n  fpsController.onFinishChange((_) => {\n    params.STATE.isTargetFPSChanged = true;\n  });\n  const sizeController = cameraFolder.add(\n      params.STATE.camera, 'sizeOption', Object.keys(params.VIDEO_SIZE));\n  sizeController.onChange(_ => {\n    params.STATE.isSizeOptionChanged = true;\n  });\n  cameraFolder.open();\n\n  // The model folder contains options for model selection.\n  const modelFolder = gui.addFolder('Model');\n\n  const model = urlParams.get('model');\n  let type = urlParams.get('type');\n  let maxNumHands = urlParams.get('maxNumHands');\n\n  switch (model) {\n    case 'mediapipe_hands':\n      params.STATE.model = handdetection.SupportedModels.MediaPipeHands;\n      if (type !== 'full' && type !== 'lite') {\n        // Nulify invalid value.\n        type = 'lite';\n      }\n      if (maxNumHands == null || maxNumHands < 1 ) {\n        // Nulify invalid value.\n        maxNumHands = 1;\n      }\n      break;\n    default:\n      alert(`${urlParams.get('model')}`);\n      break;\n  }\n\n  const modelController = modelFolder.add(\n      params.STATE, 'model', Object.values(handdetection.SupportedModels));\n\n  modelController.onChange(_ => {\n    params.STATE.isModelChanged = true;\n    showModelConfigs(modelFolder);\n    showBackendConfigs(backendFolder);\n  });\n\n  showModelConfigs(modelFolder, type, maxNumHands);\n\n  modelFolder.open();\n\n  const backendFolder = gui.addFolder('Backend');\n\n  showBackendConfigs(backendFolder);\n\n  backendFolder.open();\n\n  return gui;\n}\n\nasync function showBackendConfigs(folderController) {\n  // Clean up backend configs for the previous model.\n  const fixedSelectionCount = 0;\n  while (folderController.__controllers.length > fixedSelectionCount) {\n    folderController.remove(\n        folderController\n            .__controllers[folderController.__controllers.length - 1]);\n  }\n  const backends = params.MODEL_BACKEND_MAP[params.STATE.model];\n  // The first element of the array is the default backend for the model.\n  params.STATE.backend = backends[0];\n  const backendController =\n      folderController.add(params.STATE, 'backend', backends);\n  backendController.name('runtime-backend');\n  backendController.onChange(async backend => {\n    params.STATE.isBackendChanged = true;\n    await showFlagSettings(folderController, backend);\n  });\n  await showFlagSettings(folderController, params.STATE.backend);\n}\n\nfunction showModelConfigs(folderController, type, maxNumHands) {\n  // Clean up model configs for the previous model.\n  // The first constroller under the `folderController` is the model\n  // selection.\n  const fixedSelectionCount = 1;\n  while (folderController.__controllers.length > fixedSelectionCount) {\n    folderController.remove(\n        folderController\n            .__controllers[folderController.__controllers.length - 1]);\n  }\n\n  switch (params.STATE.model) {\n    case handdetection.SupportedModels.MediaPipeHands:\n      addMediaPipeHandsControllers(folderController, type, maxNumHands);\n      break;\n    default:\n      alert(`Model ${params.STATE.model} is not supported.`);\n  }\n}\n\n// The MediaPipeHands model config folder contains options for MediaPipeHands config\n// settings.\nfunction addMediaPipeHandsControllers(modelConfigFolder, type, maxNumHands) {\n  params.STATE.modelConfig = {...params.MEDIAPIPE_HANDS_CONFIG};\n  params.STATE.modelConfig.type = type != null ? type : 'full';\n  params.STATE.modelConfig.maxNumHands = maxNumHands != null ? maxNumHands : 2;\n\n  const typeController = modelConfigFolder.add(\n      params.STATE.modelConfig, 'type', ['lite', 'full']);\n  typeController.onChange(_ => {\n    // Set isModelChanged to true, so that we don't render any result during\n    // changing models.\n    params.STATE.isModelChanged = true;\n  });\n\n  const maxNumHandsController = modelConfigFolder.add(\n    params.STATE.modelConfig, 'maxNumHands', 1, 10).step(1);\n    maxNumHandsController.onChange(_ => {\n    // Set isModelChanged to true, so that we don't render any result during\n    // changing models.\n    params.STATE.isModelChanged = true;\n  });\n\n  const render3DController =\n      modelConfigFolder.add(params.STATE.modelConfig, 'render3D');\n  render3DController.onChange(render3D => {\n    document.querySelector('#scatter-gl-container-left').style.display =\n        render3D ? 'inline-block' : 'none';\n    document.querySelector('#scatter-gl-container-right').style.display =\n        render3D ? 'inline-block' : 'none';\n  });\n}\n\n/**\n * Query all tunable flags' default value and populate `STATE.flags` with them.\n */\nasync function initDefaultValueMap() {\n  // Clean up the cache to query tunable flags' default values.\n  TUNABLE_FLAG_DEFAULT_VALUE_MAP = {};\n  params.STATE.flags = {};\n  for (const backend in params.BACKEND_FLAGS_MAP) {\n    for (let index = 0; index < params.BACKEND_FLAGS_MAP[backend].length;\n         index++) {\n      const flag = params.BACKEND_FLAGS_MAP[backend][index];\n      TUNABLE_FLAG_DEFAULT_VALUE_MAP[flag] = await tf.env().getAsync(flag);\n    }\n  }\n\n  // Initialize STATE.flags with tunable flags' default values.\n  for (const flag in TUNABLE_FLAG_DEFAULT_VALUE_MAP) {\n    if (params.BACKEND_FLAGS_MAP[params.STATE.backend].indexOf(flag) > -1) {\n      params.STATE.flags[flag] = TUNABLE_FLAG_DEFAULT_VALUE_MAP[flag];\n    }\n  }\n}\n\n/**\n * Heuristically determine flag's value range based on flag's default value.\n *\n * Assume that the flag's default value has already chosen the best option for\n * the runtime environment, so users can only tune the flag value downwards.\n *\n * For example, if the default value of `WEBGL_RENDER_FLOAT32_CAPABLE` is false,\n * the tunable range is [false]; otherwise, the tunable range is [true. false].\n *\n * @param {string} flag\n */\nfunction getTunableRange(flag) {\n  const defaultValue = TUNABLE_FLAG_DEFAULT_VALUE_MAP[flag];\n  if (flag === 'WEBGL_FORCE_F16_TEXTURES') {\n    return [false, true];\n  } else if (flag === 'WEBGL_VERSION') {\n    const tunableRange = [];\n    for (let value = 1; value <= defaultValue; value++) {\n      tunableRange.push(value);\n    }\n    return tunableRange;\n  } else if (flag === 'WEBGL_FLUSH_THRESHOLD') {\n    const tunableRange = [-1];\n    for (let value = 0; value <= 2; value += 0.25) {\n      tunableRange.push(value);\n    }\n    return tunableRange;\n  } else if (typeof defaultValue === 'boolean') {\n    return defaultValue ? [false, true] : [false];\n  } else if (params.TUNABLE_FLAG_VALUE_RANGE_MAP[flag] != null) {\n    return params.TUNABLE_FLAG_VALUE_RANGE_MAP[flag];\n  } else {\n    return [defaultValue];\n  }\n}\n\n/**\n * Show flag settings for the given backend under the UI element of\n * `folderController`.\n *\n * @param {dat.gui.GUI} folderController\n * @param {string} backendName\n */\nfunction showBackendFlagSettings(folderController, backendName) {\n  const tunableFlags = params.BACKEND_FLAGS_MAP[backendName];\n  for (let index = 0; index < tunableFlags.length; index++) {\n    const flag = tunableFlags[index];\n    const flagName = params.TUNABLE_FLAG_NAME_MAP[flag] || flag;\n\n    // When tunable (bool) and range (array) attributes of `flagRegistry` is\n    // implemented, we can apply them to here.\n    const flagValueRange = getTunableRange(flag);\n    // Heuristically consider a flag with at least two options as tunable.\n    if (flagValueRange.length < 2) {\n      console.warn(\n          `The ${flag} is considered as untunable, ` +\n          `because its value range is [${flagValueRange}].`);\n      continue;\n    }\n\n    let flagController;\n    if (typeof flagValueRange[0] === 'boolean') {\n      // Show checkbox for boolean flags.\n      flagController = folderController.add(params.STATE.flags, flag);\n    } else {\n      // Show dropdown for other types of flags.\n      flagController =\n          folderController.add(params.STATE.flags, flag, flagValueRange);\n\n      // Because dat.gui always casts dropdown option values to string, we need\n      // `stringValueMap` and `onFinishChange()` to recover the value type.\n      if (stringValueMap[flag] == null) {\n        stringValueMap[flag] = {};\n        for (let index = 0; index < flagValueRange.length; index++) {\n          const realValue = flagValueRange[index];\n          const stringValue = String(flagValueRange[index]);\n          stringValueMap[flag][stringValue] = realValue;\n        }\n      }\n      flagController.onFinishChange(stringValue => {\n        params.STATE.flags[flag] = stringValueMap[flag][stringValue];\n      });\n    }\n    flagController.name(flagName).onChange(() => {\n      params.STATE.isFlagChanged = true;\n    });\n  }\n}\n\n/**\n * Set up flag settings under the UI element of `folderController`:\n * - If it is the first call, initialize the flags' default value and show flag\n * settings for both the general and the given backend.\n * - Else, clean up flag settings for the previous backend and show flag\n * settings for the new backend.\n *\n * @param {dat.gui.GUI} folderController\n * @param {string} backendName\n */\nasync function showFlagSettings(folderController, backendName) {\n  await initDefaultValueMap();\n\n  // Clean up flag settings for the previous backend.\n  // The first constroller under the `folderController` is the backend\n  // setting.\n  const fixedSelectionCount = 1;\n  while (folderController.__controllers.length > fixedSelectionCount) {\n    folderController.remove(\n        folderController\n            .__controllers[folderController.__controllers.length - 1]);\n  }\n\n  // Show flag settings for the new backend.\n  showBackendFlagSettings(folderController, backendName);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as handdetection from '@tensorflow-models/hand-pose-detection';\n\nexport const DEFAULT_LINE_WIDTH = 2;\nexport const DEFAULT_RADIUS = 2;\n\nexport const VIDEO_SIZE = {\n  '640 X 480': {width: 640, height: 480},\n  '640 X 360': {width: 640, height: 360},\n  '360 X 270': {width: 360, height: 270}\n};\nexport const STATE = {\n  camera: {targetFPS: 60, sizeOption: '360 X 270'},\n  backend: '',\n  flags: {},\n  modelConfig: {}\n};\nexport const MEDIAPIPE_HANDS_CONFIG = {\n  type: 'full',\n  render3D: false\n};\n/**\n * This map descripes tunable flags and theior corresponding types.\n *\n * The flags (keys) in the map satisfy the following two conditions:\n * - Is tunable. For example, `IS_BROWSER` and `IS_CHROME` is not tunable,\n * because they are fixed when running the scripts.\n * - Does not depend on other flags when registering in `ENV.registerFlag()`.\n * This rule aims to make the list streamlined, and, since there are\n * dependencies between flags, only modifying an independent flag without\n * modifying its dependents may cause inconsistency.\n * (`WEBGL_RENDER_FLOAT32_CAPABLE` is an exception, because only exposing\n * `WEBGL_FORCE_F16_TEXTURES` may confuse users.)\n */\nexport const TUNABLE_FLAG_VALUE_RANGE_MAP = {\n  WEBGL_VERSION: [1, 2],\n  WASM_HAS_SIMD_SUPPORT: [true, false],\n  WASM_HAS_MULTITHREAD_SUPPORT: [true, false],\n  WEBGL_CPU_FORWARD: [true, false],\n  WEBGL_PACK: [true, false],\n  WEBGL_FORCE_F16_TEXTURES: [true, false],\n  WEBGL_RENDER_FLOAT32_CAPABLE: [true, false],\n  WEBGL_FLUSH_THRESHOLD: [-1, 0, 0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\n  CHECK_COMPUTATION_FOR_ERRORS: [true, false],\n};\n\nexport const BACKEND_FLAGS_MAP = {\n  ['tfjs-wasm']: ['WASM_HAS_SIMD_SUPPORT', 'WASM_HAS_MULTITHREAD_SUPPORT'],\n  ['tfjs-webgl']: [\n    'WEBGL_VERSION', 'WEBGL_CPU_FORWARD', 'WEBGL_PACK',\n    'WEBGL_FORCE_F16_TEXTURES', 'WEBGL_RENDER_FLOAT32_CAPABLE',\n    'WEBGL_FLUSH_THRESHOLD'\n  ],\n  ['mediapipe-gpu']: []\n};\n\nexport const MODEL_BACKEND_MAP = {\n  [handdetection.SupportedModels.MediaPipeHands]: ['mediapipe-gpu', 'tfjs-webgl']\n}\n\nexport const TUNABLE_FLAG_NAME_MAP = {\n  PROD: 'production mode',\n  WEBGL_VERSION: 'webgl version',\n  WASM_HAS_SIMD_SUPPORT: 'wasm SIMD',\n  WASM_HAS_MULTITHREAD_SUPPORT: 'wasm multithread',\n  WEBGL_CPU_FORWARD: 'cpu forward',\n  WEBGL_PACK: 'webgl pack',\n  WEBGL_FORCE_F16_TEXTURES: 'enforce float16',\n  WEBGL_RENDER_FLOAT32_CAPABLE: 'enable float32',\n  WEBGL_FLUSH_THRESHOLD: 'GL flush wait time(ms)'\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport function setupStats() {\n  const stats = new Stats();\n  stats.customFpsPanel = stats.addPanel(new Stats.Panel('FPS', '#0ff', '#002'));\n  stats.showPanel(stats.domElement.children.length - 1);\n\n  const parent = document.getElementById('stats');\n  parent.appendChild(stats.domElement);\n\n  const statsPanes = parent.querySelectorAll('canvas');\n\n  for (let i = 0; i < statsPanes.length; ++i) {\n    statsPanes[i].style.width = '140px';\n    statsPanes[i].style.height = '80px';\n  }\n  return stats;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as tf from '@tensorflow/tfjs-core';\nimport {TUNABLE_FLAG_VALUE_RANGE_MAP} from './params';\n\nexport function isiOS() {\n  return /iPhone|iPad|iPod/i.test(navigator.userAgent);\n}\n\nexport function isAndroid() {\n  return /Android/i.test(navigator.userAgent);\n}\n\nexport function isMobile() {\n  return isAndroid() || isiOS();\n}\n\n/**\n * Reset the target backend.\n *\n * @param backendName The name of the backend to be reset.\n */\nasync function resetBackend(backendName) {\n  const ENGINE = tf.engine();\n  if (!(backendName in ENGINE.registryFactory)) {\n    throw new Error(`${backendName} backend is not registed.`);\n  }\n\n  if (backendName in ENGINE.registry) {\n    const backendFactory = tf.findBackendFactory(backendName);\n    tf.removeBackend(backendName);\n    tf.registerBackend(backendName, backendFactory);\n  }\n\n  await tf.setBackend(backendName);\n}\n\n/**\n * Set environment flags.\n *\n * This is a wrapper function of `tf.env().setFlags()` to constrain users to\n * only set tunable flags (the keys of `TUNABLE_FLAG_TYPE_MAP`).\n *\n * ```js\n * const flagConfig = {\n *        WEBGL_PACK: false,\n *      };\n * await setEnvFlags(flagConfig);\n *\n * console.log(tf.env().getBool('WEBGL_PACK')); // false\n * console.log(tf.env().getBool('WEBGL_PACK_BINARY_OPERATIONS')); // false\n * ```\n *\n * @param flagConfig An object to store flag-value pairs.\n */\nexport async function setBackendAndEnvFlags(flagConfig, backend) {\n  if (flagConfig == null) {\n    return;\n  } else if (typeof flagConfig !== 'object') {\n    throw new Error(\n        `An object is expected, while a(n) ${typeof flagConfig} is found.`);\n  }\n\n  // Check the validation of flags and values.\n  for (const flag in flagConfig) {\n    // TODO: check whether flag can be set as flagConfig[flag].\n    if (!(flag in TUNABLE_FLAG_VALUE_RANGE_MAP)) {\n      throw new Error(`${flag} is not a tunable or valid environment flag.`);\n    }\n    if (TUNABLE_FLAG_VALUE_RANGE_MAP[flag].indexOf(flagConfig[flag]) === -1) {\n      throw new Error(\n          `${flag} value is expected to be in the range [${\n              TUNABLE_FLAG_VALUE_RANGE_MAP[flag]}], while ${flagConfig[flag]}` +\n          ' is found.');\n    }\n  }\n\n  tf.env().setFlags(flagConfig);\n\n  const [runtime, $backend] = backend.split('-');\n\n  if (runtime === 'tfjs') {\n    await resetBackend($backend);\n  }\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","Array","from","test","iter","isArray","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","scatter","params","isMobile","ANCHOR_POINTS","fingerLookupIndices","thumb","indexFinger","middleFinger","ringFinger","pinky","connections","createScatterGLContext","selectors","scatterGLEl","document","querySelector","scatterGL","ScatterGL","polyline","defaultOpacity","deselectedOpacity","scatterGLHasInitialized","scatterGLCtxtLeftHand","scatterGLCtxtRightHand","Camera","video","getElementById","canvas","ctx","getContext","drawCtx","drawImage","videoWidth","videoHeight","clearCtx","clearRect","drawResults","hands","sort","hand1","hand2","handedness","ctxt","drawResult","hand","keypoints","drawKeypoints","keypoints3D","STATE","modelConfig","render3D","drawKeypoints3D","keypointsArray","fillStyle","strokeStyle","lineWidth","DEFAULT_LINE_WIDTH","x","drawPoint","fingers","finger","points","map","idx","drawPath","closePath","region","Path2D","moveTo","point","lineTo","stroke","beginPath","arc","Math","PI","fill","scoreThreshold","pointsData","keypoint","z","dataset","Dataset","concat","setPointColorer","score","render","updateDataset","sequences","pair","indices","setSequences","_setupCamera","_callee","cameraParam","targetFPS","sizeOption","$size","videoConfig","stream","camera","_i2","_arr","_callee$","_context","navigator","mediaDevices","getUserMedia","VIDEO_SIZE","facingMode","frameRate","ideal","srcObject","onloadedmetadata","width","height","canvasContainer","style","play","translate","scale","resize","display","setupCamera","_x","tfjsWasm","setWasmPaths","handdetection","setupDatGui","setupStats","setBackendAndEnvFlags","detector","stats","startInferenceTime","numInferences","inferenceTimeSum","lastPanelUpdate","rafId","createDetector","_createDetector","runtime","t0","model","SupportedModels","MediaPipeHands","backend","split","modelType","maxHands","maxNumHands","solutionPath","checkGuiUpdate","_checkGuiUpdate","_callee2","_callee2$","_context2","isTargetFPSChanged","isSizeOptionChanged","isModelChanged","isFlagChanged","isBackendChanged","window","cancelAnimationFrame","dispose","flags","alert","beginEstimateHandsStats","performance","Date","now","endEstimateHandsStats","endInferenceTime","panelUpdateMilliseconds","averageInferenceTime","renderResult","_renderResult","_callee3","_callee3$","_context3","readyState","onloadeddata","estimateHands","flipHorizontal","renderPrediction","_renderPrediction","_callee4","_callee4$","_context4","requestAnimationFrame","app","_app","_callee5","urlParams","_callee5$","_context5","URLSearchParams","location","search","has","set","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","dat","tf","TUNABLE_FLAG_DEFAULT_VALUE_MAP","stringValueMap","_setupDatGui","gui","cameraFolder","fpsController","sizeController","modelFolder","modelController","backendFolder","GUI","domElement","id","addFolder","add","onFinishChange","_","onChange","open","get","showModelConfigs","showBackendConfigs","_x2","_showBackendConfigs","folderController","fixedSelectionCount","backends","backendController","__controllers","remove","MODEL_BACKEND_MAP","_ref","showFlagSettings","_x5","addMediaPipeHandsControllers","modelConfigFolder","MEDIAPIPE_HANDS_CONFIG","typeController","maxNumHandsController","step","render3DController","initDefaultValueMap","_initDefaultValueMap","index","flag","_flag","BACKEND_FLAGS_MAP","t1","env","getAsync","indexOf","getTunableRange","defaultValue","tunableRange","TUNABLE_FLAG_VALUE_RANGE_MAP","showBackendFlagSettings","backendName","tunableFlags","_loop","flagName","TUNABLE_FLAG_NAME_MAP","flagValueRange","console","warn","flagController","realValue","stringValue","_x3","_x4","_showFlagSettings","DEFAULT_RADIUS","WEBGL_VERSION","WASM_HAS_SIMD_SUPPORT","WASM_HAS_MULTITHREAD_SUPPORT","WEBGL_CPU_FORWARD","WEBGL_PACK","WEBGL_FORCE_F16_TEXTURES","WEBGL_RENDER_FLOAT32_CAPABLE","WEBGL_FLUSH_THRESHOLD","CHECK_COMPUTATION_FOR_ERRORS","PROD","Stats","customFpsPanel","addPanel","Panel","showPanel","children","parent","appendChild","statsPanes","querySelectorAll","isiOS","userAgent","isAndroid","resetBackend","_resetBackend","ENGINE","backendFactory","engine","registryFactory","registry","findBackendFactory","removeBackend","registerBackend","setBackend","_setBackendAndEnvFlags","flagConfig","_backend$split","_backend$split2","$backend","setFlags","_slicedToArray"],"sourceRoot":""}